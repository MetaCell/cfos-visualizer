version: '1.0'
stages:
  - prepare
  - build
  - deploy
  - qa

steps:
  main_clone:
    title: 'Cloning main repository...'
    type: git-clone
    stage: prepare
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}'
    git: github

  build_application_images:
    type: build
    stage: build
    dockerfile: './client/deploy/Dockerfile'
    registry: '${{CODEFRESH_REGISTRY}}'
    buildkit: true
    image_name: cfos-visualizer
    title: CFOS-Visualizer
    working_directory: './'
    tag: '${{CF_BUILD_ID}}'

  deployment:
    stage: deploy
    type: helm
    working_directory: './${{CF_REPO_NAME}}'
    title: Installing chart
    arguments:
      helm_version: 3.6.2
      chart_name: deployment/helm
      release_name: '${{NAMESPACE}}'
      kube_context: '${{CLUSTER_NAME}}'
      namespace: '${{NAMESPACE}}'
      cmd_ps: --wait --timeout 600s --create-namespace
      custom_value_files:
        - deployment/helm/values.yaml
      custom_values:
        - image.repository=${{REGISTRY}}/cfos-visualizer
        - image.tag=${{CF_BUILD_ID}}
        - ingress.hosts[0].host=${{DOMAIN}}
  test_image:
      title: "Building Integration Image"
      type: "build"
      stage: "qa"
      image_name: "cfos-e2e"
      tag: '${{CF_SHORT_REVISION}}'
      working_directory: ./tests/e2e
      disable_push: True
  e2e_tests:
      title: "End to End tests"
      stage: "qa"
      image: '${{test_image}}'
      fail_fast: false
      environment:
        - url=https://${{PUBLIC_URL}}
      commands:
        - bash -c "rm -rf /codefresh/volume/cfos-visualizer/tests"
        - echo $url
        - bash -c "cd / && npm test"
